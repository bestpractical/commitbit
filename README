CommitBit - An opensource project administration tool

CommitBit is a tool for managing commit access to opensource projects.
It also provides for a "code.yourorganization.org" site with links to
your wiki, mailing lists, bug tracking and so on.

The project is in the early stages of development and could desperately
use some help. If you're interested, please write to
jesse@bestpractical.com and ask for a commit bit.

CommitBit is a Jifty app, if you're not familiar with Jifty, 
you can read more on http://jifty.org.

Here are a few steps to get started.

Untar the distribution where you want the application to live, 
cd into the directory and run the following

 perl Makefile.PL

Satisfy any missing dependencies

 make test

The next step creates a sqlite3 database named commitbit.
If you would rather use another database, this can be
configured in your etc/site_config.yml, based on the data
in etc/config.yml

 ./bin/jifty schema

Once your database exists, you need to set up your first user
so that you will be able to log into the Web UI.  There is a utility
for this in the bin/ directory

 ./bin/create_admin --email=foo@example.com


At this point, you're ready to fire up commitbit, you can do this
by running

 ./bin/jifty server

It will tell you where to connect to the server.

You can log in as foo@example.com using 'password' (no quotes) as your password

You should now go create a Repository (Admin -> Repositories -> Create another repository)

The most important field on the create page is local_path.
If you enter 'foo' here, a foo repository will be created in the repos/ directory
of the directory where CommitBit is running.

The repos/ directory is controlled by the repository_prefix token in etc/config.yml
and you can change it by adding the following to etc/site_config.yml

application:
 repository_prefix: repositories

There are several ways to use this.  You can symlink your real repositories
into the repos/ directory.  You can enter a full path to your repo in local_path
or if you're creating new repositories, you can let them be built in repos/name
for you.

The user the jifty app is running as needs to be able to write to your
svn repo's conf directory

When you create your repository in CommitBit, the following files are created
for you.

authz - auth file for svnserver or mod_authz_svn
htpasswd - passwd file for mod_authz_svn
passwd - passwd file for use with svnserve
svnserve.conf - configuration file for svsnserve
httpd.conf - and httpd.conf snippet that you can include into apache

These are all autogenerated files and should not be changed except through commitbit

Once you've created a Repository, you should create Projects that live within
this Repository.  You'll be able to indicate that the Projects live at a url
within the larger Repository and grant users access to specific projects
within the Repository.  Users may also be ovservers, authors or admins.

Authors: Jesse Vincent and Chia-liang Kao

Copyright 2006, Best Practical Solutions

This software is freely available under the same terms as Perl 5.8.8.
(That means you can use it under the terms of the GPL or The Artistic
 License 1.0). If you want to use it under the terms of The Death and
Repudiation License, that's cool too. (COPYING/dr.txt)
